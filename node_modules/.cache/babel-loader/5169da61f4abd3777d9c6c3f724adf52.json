{"ast":null,"code":"import _toConsumableArray from \"/Users/tjxy/Downloads/transformcontrols-and-makedefault/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/tjxy/Downloads/transformcontrols-and-makedefault/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n\nvar e = Symbol(),\n    t = Symbol(),\n    r = Symbol(),\n    n = Object.getPrototypeOf,\n    o = new WeakMap(),\n    s = function s(e) {\n  return e && (o.has(e) ? o.get(e) : n(e) === Object.prototype || n(e) === Array.prototype);\n},\n    c = function c(e) {\n  return \"object\" == typeof e && null !== e;\n},\n    l = function l(n, o) {\n  var s = !1;\n\n  var c = function c(e, t) {\n    if (!s) {\n      var _r = e.a.get(n);\n\n      _r || (_r = new Set(), e.a.set(n, _r)), _r.add(t);\n    }\n  },\n      l = {\n    f: o,\n    get: function get(e, t) {\n      return t === r ? n : (c(this, t), i(e[t], this.a, this.c));\n    },\n    has: function has(e, r) {\n      return r === t ? (s = !0, this.a.delete(n), !0) : (c(this, r), r in e);\n    },\n    ownKeys: function ownKeys(t) {\n      return c(this, e), Reflect.ownKeys(t);\n    }\n  };\n\n  return o && (l.set = l.deleteProperty = function () {\n    return !1;\n  }), l;\n},\n    i = function i(e, t, o) {\n  if (!s(e)) return e;\n\n  var c = e[r] || e,\n      i = function (e) {\n    return Object.isFrozen(e) || Object.values(Object.getOwnPropertyDescriptors(e)).some(function (e) {\n      return !e.writable;\n    });\n  }(c);\n\n  var u = o && o.get(c);\n  return u && u.f === i || (u = l(c, i), u.p = new Proxy(i ? function (e) {\n    if (Array.isArray(e)) return Array.from(e);\n    var t = Object.getOwnPropertyDescriptors(e);\n    return Object.values(t).forEach(function (e) {\n      e.configurable = !0;\n    }), Object.create(n(e), t);\n  }(c) : c, u), o && o.set(c, u)), u.a = t, u.c = o, u.p;\n},\n    u = function u(e, t) {\n  var r = Reflect.ownKeys(e),\n      n = Reflect.ownKeys(t);\n  return r.length !== n.length || r.some(function (e, t) {\n    return e !== n[t];\n  });\n},\n    a = function a(t, r, n, o) {\n  if (Object.is(t, r)) return !1;\n  if (!c(t) || !c(r)) return !0;\n  var s = n.get(t);\n  if (!s) return !0;\n\n  if (o) {\n    var _e = o.get(t);\n\n    if (_e && _e.n === r) return _e.g;\n    o.set(t, {\n      n: r,\n      g: !1\n    });\n  }\n\n  var l = null;\n\n  var _iterator = _createForOfIteratorHelper(s),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _c = _step.value;\n\n      var _s = _c === e ? u(t, r) : a(t[_c], r[_c], n, o);\n\n      if (!0 !== _s && !1 !== _s || (l = _s), l) break;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return null === l && (l = !0), o && o.set(t, {\n    n: r,\n    g: l\n  }), l;\n},\n    f = function f(e) {\n  return !!s(e) && t in e;\n},\n    y = function y(e) {\n  return s(e) && e[r] || null;\n},\n    b = function b(e) {\n  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;\n  o.set(e, t);\n},\n    g = function g(e, t) {\n  var r = [],\n      n = function n(e, o) {\n    var s = t.get(e);\n    s ? s.forEach(function (t) {\n      n(e[t], o ? [].concat(_toConsumableArray(o), [t]) : [t]);\n    }) : o && r.push(o);\n  };\n\n  return n(e), r;\n};\n\nexport { g as affectedToPathList, i as createProxy, y as getUntracked, a as isChanged, b as markToTrack, f as trackMemo };","map":{"version":3,"mappings":"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","names":["OWN_KEYS_SYMBOL","Symbol","TRACK_MEMO_SYMBOL","GET_ORIGINAL_SYMBOL","getProto","Object","getPrototypeOf","objectsToTrack","WeakMap","isObjectToTrack","obj","has","get","prototype","Array","isObject","x","createProxyHandler","origObj","frozen","trackObject","recordUsage","h","key","used","a","Set","set","add","handler","f","target","this","createProxy","delete","ownKeys","Reflect","deleteProperty","affected","proxyCache","isFrozen","values","getOwnPropertyDescriptors","some","descriptor","writable","proxyHandler","p","Proxy","isArray","from","descriptors","forEach","desc","configurable","create","c","isOwnKeysChanged","nextObj","origKeys","nextKeys","length","k","i","isChanged","cache","is","hit","n","g","changed","trackMemo","getUntracked","markToTrack","mark","affectedToPathList","list","walk","path","push"],"sources":["/Users/tjxy/Downloads/transformcontrols-and-makedefault/node_modules/proxy-compare/src/index.ts"],"sourcesContent":["// symbols\nconst OWN_KEYS_SYMBOL = Symbol();\nconst TRACK_MEMO_SYMBOL = Symbol();\nconst GET_ORIGINAL_SYMBOL = Symbol();\n\n// properties\nconst AFFECTED_PROPERTY = 'a';\nconst FROZEN_PROPERTY = 'f';\nconst PROXY_PROPERTY = 'p';\nconst PROXY_CACHE_PROPERTY = 'c';\nconst NEXT_OBJECT_PROPERTY = 'n';\nconst CHANGED_PROPERTY = 'g';\n\n// get object prototype\nconst getProto = Object.getPrototypeOf;\n\nconst objectsToTrack = new WeakMap<object, boolean>();\n\n// check if obj is a plain object or an array\nconst isObjectToTrack = <T>(obj: T): obj is T extends object ? T : never => (\n  obj && (objectsToTrack.has(obj as unknown as object)\n    ? objectsToTrack.get(obj as unknown as object) as boolean\n    : (getProto(obj) === Object.prototype || getProto(obj) === Array.prototype)\n  )\n);\n\n// check if it is object\nconst isObject = (x: unknown): x is object => (\n  typeof x === 'object' && x !== null\n);\n\n// check if frozen\nconst isFrozen = (obj: object) => (\n  Object.isFrozen(obj) || (\n    // Object.isFrozen() doesn't detect non-writable properties\n    // See: https://github.com/dai-shi/proxy-compare/pull/8\n    Object.values(Object.getOwnPropertyDescriptors(obj)).some(\n      (descriptor) => !descriptor.writable,\n    )\n  )\n);\n\n// copy frozen object\nconst unfreeze = (obj: object) => {\n  if (Array.isArray(obj)) {\n    // Arrays need a special way to copy\n    return Array.from(obj);\n  }\n  // For non-array objects, we create a new object keeping the prototype\n  // with changing all configurable options (otherwise, proxies will complain)\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  Object.values(descriptors).forEach((desc) => { desc.configurable = true; });\n  return Object.create(getProto(obj), descriptors);\n};\n\ntype Affected = WeakMap<object, Set<string | symbol>>;\ntype ProxyCache<T extends object> = WeakMap<object, ProxyHandler<T>>;\ntype ProxyHandler<T extends object> = {\n  [FROZEN_PROPERTY]: boolean;\n  [PROXY_PROPERTY]?: T;\n  [PROXY_CACHE_PROPERTY]?: ProxyCache<object>;\n  [AFFECTED_PROPERTY]?: Affected;\n  get(target: T, key: string | symbol): unknown;\n  has(target: T, key: string | symbol): boolean;\n  ownKeys(target: T): (string | symbol)[];\n  set?(target: T, key: string | symbol, value: unknown): boolean;\n  deleteProperty?(target: T, key: string | symbol): boolean;\n};\n\nconst createProxyHandler = <T extends object>(origObj: T, frozen: boolean) => {\n  let trackObject = false; // for trackMemo\n  const recordUsage = (h: ProxyHandler<T>, key: string | symbol) => {\n    if (!trackObject) {\n      let used = (h[AFFECTED_PROPERTY] as Affected).get(origObj);\n      if (!used) {\n        used = new Set();\n        (h[AFFECTED_PROPERTY] as Affected).set(origObj, used);\n      }\n      used.add(key);\n    }\n  };\n  const recordObjectAsUsed = (h: ProxyHandler<T>) => {\n    trackObject = true;\n    (h[AFFECTED_PROPERTY] as Affected).delete(origObj);\n  };\n  const handler: ProxyHandler<T> = {\n    [FROZEN_PROPERTY]: frozen,\n    get(target, key) {\n      if (key === GET_ORIGINAL_SYMBOL) {\n        return origObj;\n      }\n      recordUsage(this, key);\n      return createProxy(\n        (target as any)[key],\n        (this[AFFECTED_PROPERTY] as Affected),\n        this[PROXY_CACHE_PROPERTY],\n      );\n    },\n    has(target, key) {\n      if (key === TRACK_MEMO_SYMBOL) {\n        recordObjectAsUsed(this);\n        return true;\n      }\n      // LIMITATION:\n      // We simply record the same as get.\n      // This means { a: {} } and { a: {} } is detected as changed,\n      // if 'a' in obj is handled.\n      recordUsage(this, key);\n      return key in target;\n    },\n    ownKeys(target) {\n      recordUsage(this, OWN_KEYS_SYMBOL);\n      return Reflect.ownKeys(target);\n    },\n  };\n  if (frozen) {\n    handler.set = handler.deleteProperty = () => false;\n  }\n  return handler;\n};\n\n/**\n * Create a proxy.\n *\n * This function will create a proxy at top level and proxy nested objects as you access them,\n * in order to keep track of which properties were accessed via get/has proxy handlers:\n *\n * NOTE: Printing of WeakMap is hard to inspect and not very readable\n * for this purpose you can use the `affectedToPathList` helper.\n *\n * @param {object} obj - Object that will be wrapped on the proxy.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that will hold the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [proxyCache] -\n * WeakMap that will help keep referential identity for proxies.\n * @returns {Proxy<object>} - Object wrapped in a proxy.\n *\n * @example\n * import { createProxy } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n * const proxy = createProxy(original, affected);\n *\n * proxy.a // Will mark as used and track its value.\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"a\"\n *\n * proxy.d // Will mark \"d\" as accessed to track and proxy itself ({ e: \"3\" }).\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"d\"\n */\nexport const createProxy = <T>(\n  obj: T,\n  affected: WeakMap<object, unknown>,\n  proxyCache?: WeakMap<object, unknown>,\n): T => {\n  if (!isObjectToTrack(obj)) return obj;\n  const origObj = (\n    obj as { [GET_ORIGINAL_SYMBOL]?: typeof obj }\n  )[GET_ORIGINAL_SYMBOL]; // unwrap proxy\n  const target = origObj || obj;\n  const frozen = isFrozen(target);\n  let proxyHandler: ProxyHandler<typeof target> | undefined = (\n    proxyCache && (proxyCache as ProxyCache<typeof target>).get(target)\n  );\n  if (!proxyHandler || proxyHandler[FROZEN_PROPERTY] !== frozen) {\n    proxyHandler = createProxyHandler<T extends object ? T : never>(target, frozen);\n    proxyHandler[PROXY_PROPERTY] = new Proxy(\n      frozen ? unfreeze(target) : target,\n      proxyHandler,\n    ) as typeof target;\n    if (proxyCache) {\n      proxyCache.set(target, proxyHandler);\n    }\n  }\n  proxyHandler[AFFECTED_PROPERTY] = affected as Affected;\n  proxyHandler[PROXY_CACHE_PROPERTY] = proxyCache as ProxyCache<object> | undefined;\n  return proxyHandler[PROXY_PROPERTY] as typeof target;\n};\n\nconst isOwnKeysChanged = (origObj: object, nextObj: object) => {\n  const origKeys = Reflect.ownKeys(origObj);\n  const nextKeys = Reflect.ownKeys(nextObj);\n  return origKeys.length !== nextKeys.length\n    || origKeys.some((k, i) => k !== nextKeys[i]);\n};\n\ntype ChangedCache = WeakMap<object, {\n  [NEXT_OBJECT_PROPERTY]: object;\n  [CHANGED_PROPERTY]: boolean;\n}>;\n\n/**\n * Compare changes on objects.\n *\n * This will compare the affected properties on tracked objects inside the proxy\n * to check if there were any changes made to it,\n * by default if no property was accessed on the proxy it will attempt to do a\n * reference equality check for the objects provided (Object.is(a, b)). If you access a property\n * on the proxy, then isChanged will only compare the affected properties.\n *\n * @param {object} origObj - The original object to compare.\n * @param {object} nextObj - Object to compare with the original one.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that holds the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [cache] -\n * WeakMap that holds a cache of the comparisons for better performance with repetitive comparisons,\n * and to avoid infinite loop with circular structures.\n * @returns {boolean} - Boolean indicating if the affected property on the object has changed.\n *\n * @example\n * import { createProxy, isChanged } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n *\n * proxy.a\n *\n * isChanged(original, { a: \"1\" }, affected) // false\n *\n * proxy.a = \"2\"\n *\n * isChanged(original, { a: \"1\" }, affected) // true\n */\n\nexport const isChanged = (\n  origObj: unknown,\n  nextObj: unknown,\n  affected: WeakMap<object, unknown>,\n  cache?: WeakMap<object, unknown>,\n): boolean => {\n  if (Object.is(origObj, nextObj)) {\n    return false;\n  }\n  if (!isObject(origObj) || !isObject(nextObj)) return true;\n  const used = (affected as Affected).get(origObj);\n  if (!used) return true;\n  if (cache) {\n    const hit = (cache as ChangedCache).get(origObj);\n    if (hit && hit[NEXT_OBJECT_PROPERTY] === nextObj) {\n      return hit[CHANGED_PROPERTY];\n    }\n    // for object with cycles\n    (cache as ChangedCache).set(origObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: false,\n    });\n  }\n  let changed: boolean | null = null;\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key of used) {\n    const c = key === OWN_KEYS_SYMBOL ? isOwnKeysChanged(origObj, nextObj)\n      : isChanged(\n        (origObj as any)[key],\n        (nextObj as any)[key],\n        affected,\n        cache,\n      );\n    if (c === true || c === false) changed = c;\n    if (changed) break;\n  }\n  if (changed === null) changed = true;\n  if (cache) {\n    cache.set(origObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: changed,\n    });\n  }\n  return changed;\n};\n\n// explicitly track object with memo\nexport const trackMemo = (obj: unknown) => {\n  if (isObjectToTrack(obj)) {\n    return TRACK_MEMO_SYMBOL in obj;\n  }\n  return false;\n};\n\n/**\n * Unwrap proxy to get the original object.\n *\n * Used to retrieve the original object used to create the proxy instance with `createProxy`.\n *\n * @param {Proxy<object>} obj -  The proxy wrapper of the originial object.\n * @returns {object | null} - Return either the unwrapped object if exists.\n *\n * @example\n * import { createProxy, getUntracked } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n * const originalFromProxy = getUntracked(proxy)\n *\n * Obejct.is(original, originalFromProxy) // true\n * isChanged(original, originalFromProxy, affected) // false\n */\nexport const getUntracked = <T>(obj: T): T | null => {\n  if (isObjectToTrack(obj)) {\n    return (obj as { [GET_ORIGINAL_SYMBOL]?: T })[GET_ORIGINAL_SYMBOL] || null;\n  }\n  return null;\n};\n\n/**\n * Mark object to be tracked.\n *\n * This function marks an object that will be passed into `createProxy`\n * as marked to track or not. By default only Array and Object are marked to track,\n * so this is useful for example to mark a class instance to track or to mark a object\n * to be untracked when creating your proxy.\n *\n * @param {object} obj - Object to mark as tracked or not.\n * @param {mark} boolean - Boolean indicating whether you want to track this object or not.\n * @returns {undefined} - No return.\n *\n * @example\n * import { createProxy, markToTrack, isChanged } from 'proxy-compare';\n *\n * const nested = { e: \"3\" }\n *\n * markToTrack(nested, false)\n *\n * const original = { a: \"1\", c: \"2\", d: nested };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n *\n * proxy.d.e\n *\n * isChanged(original, { d: { e: \"3\" } }, affected) // true\n */\nexport const markToTrack = (obj: object, mark = true) => {\n  objectsToTrack.set(obj, mark);\n};\n\n// convert affected to path list\nexport const affectedToPathList = (\n  obj: unknown,\n  affected: WeakMap<object, unknown>,\n) => {\n  const list: (string | symbol)[][] = [];\n  const walk = (x: unknown, path?: (string | symbol)[]) => {\n    const used = (affected as Affected).get(x as object);\n    if (used) {\n      used.forEach((key) => {\n        walk((x as any)[key], path ? [...path, key] : [key]);\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(obj);\n  return list;\n};\n"]},"metadata":{},"sourceType":"module"}